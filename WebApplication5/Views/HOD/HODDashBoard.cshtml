@model  WebApplication5.Models.HODDashboardViewModel

@{
    Layout = "~/Views/Shared/_HODLayout.cshtml";
    ViewBag.Title = "HODDashBoard";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>View Requests</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <style>
        form {
            padding-top: 3px;
        }

        .form-label {
            font-weight: bold;
        }

        .form-control {
            width: auto;
        }

        .footer {
            margin-top: 85px;
        }
    </style>
</head>
<body>
    <form method="get" action="@Url.Action("HODDashboard", "HOD")">
        <div class="d-flex justify-content-center align-items-center mb-3">
            <div class="form-group me-2">
                <label for="fromDate" class="form-label">From Date:</label>
                <input type="date" id="fromDate" name="fromDate" class="form-control"
                       value="@Request.QueryString["fromDate"]" />
            </div>

            <div class="form-group me-2">
                <label for="toDate" class="form-label">To Date:</label>
                <input type="date" id="toDate" name="toDate" class="form-control"
                       value="@Request.QueryString["toDate"]" />
            </div>

            <div class="form-group mt-4">
                <button type="submit" class="btn btn-primary">Filter</button>
            </div>
        </div>
    </form>


    <div class="container mt-4">
        <h3 class="text-center">Recevied Requests</h3>

        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>SNo</th>
                    <th>Request ID</th>
                    <th>Requested Date</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var request in Model.Requests)
                {
                    <tr class="clickable-row" data-toggle="details-@request.RequestID">
                        <td>@request.SNo</td>
                        <td><a href="javascript:void(0)" class="request-id" data-id="@request.RequestID">@request.RequestID</a></td>
                        <td>@request.RequestDate.ToString("dd-MM-yyyy")</td>
                    </tr>
                    <tr id="details-@request.RequestID" class="details-row" style="display: none;">
                        <td colspan="3">
                            <strong>EmployeeID:</strong> @request.EmpID <br>
                            <strong>Status:</strong> @request.Status <br>
                            @*<strong>Requested Date:</strong> @request.RequestDate.ToString("dd-MM-yyyy") <br><br>*@

                            <table class="table table-striped">
                                <thead>
                                    <tr>

                                        <th>Asset Type</th>
                                        <th>Material Category</th>
                                        <th>Sub-Category</th>
                                        <th>Available Quantity</th>
                                        <th>Requesting Quantity</th>
                                        <th>Approved Quantity</th>
                                        <th>Actions</th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var asset in request.AssetDetails)
                                    {
                                        <tr>

                                            <td>@asset.AssetType</td>
                                            <td>@asset.MaterialCategory</td>
                                            <td>@asset.MSubCategory</td>
                                            <td>@asset.AvailableQuantity</td>
                                            <td>@asset.RequestingQuantity</td>
                                            <td>
                                                <input type="number" class="form-control approvingQuantity"
                                                       data-id="@request.RequestID-@asset.MSubCategory"
                                                       value="@asset.ApprovedQuantity"
                                                       min="1"
                                                       max="@asset.RequestingQuantity"
                                                       oninput="validateQuantity(this, @asset.RequestingQuantity)" />

                                            </td>
                                            <td>
                                                <button class="btn btn-info btn-sm viewPast" data-empid="@request.EmpID">Past</button>

                                                <div class="dropdown d-inline-block">

                                                    <select class="form-select action-select"
                                                            data-id="@request.RequestID-@asset.MSubCategory"
                                                            data-msubcategory="@asset.MSubCategory">
                                                        <option selected disabled>Actions</option>
                                                        <option value="approve">Approve</option>
                                                        @*<option value="pending">Pending</option>*@
                                                        <option value="reject">Reject</option>
                                                    </select>

                                                </div>

                                            </td>
                                        </tr>

                                    }
                                </tbody>
                            </table>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <div class="d-flex justify-content-between">
            @if (Model.CurrentPage > 1)
            {
                <a class="btn btn-primary"
                   href="@Url.Action("HODDashBoard", new { page = Model.CurrentPage - 1, pageSize = Model.PageSize })">
                    Previous
                </a>
            }
            else
            {
                <span class="btn btn-secondary disabled">Previous</span>
            }

            <span>Page @Model.CurrentPage</span>

            @if ((Model.CurrentPage * Model.PageSize) < Model.TotalCount)
            {
                <a class="btn btn-primary"
                   href="@Url.Action("HODDashBoard", new { page = Model.CurrentPage + 1, pageSize = Model.PageSize })">
                    Next
                </a>
            }
            else
            {
                <span class="btn btn-secondary disabled">Next</span>
            }
        </div>

        <div class="modal fade" id="pastRequestsModal" tabindex="-1" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Past Requests</h5>
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                    </div>
                    <div class="modal-body" id="pastRequestsBody">
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="remarksModal" tabindex="-1" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Rejection Remarks</h5>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="remarks">Enter Remarks:</label>
                        <textarea class="form-control" id="remarksText" rows="3"></textarea>
                    </div>
                    <button type="button" class="btn btn-danger mt-2" id="submitRemarks">Submit</button>
                </div>
            </div>
        </div>
    </div>


    <!-- Include Bootstrap CSS & JS (if not already included) -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


    <script>
    $(document).ready(function () {

    console.log("HOD Dashboard scripts loaded"); // Debugging

    // ✅ Toggle request details
    $(".request-id").click(function () {
    let requestID = $(this).data("id");
    $("#details-" + requestID).toggle();
    });

    // ✅ View Past Requests
    $(".viewPast").click(function () {
    let empId = $(this).data("empid");
    $.get("/HOD/GetPastRequests", { empId: empId }, function (data) {
    $("#pastRequestsBody").html(data);
    $("#pastRequestsModal").modal("show");
    }).fail(function () {
    alert("Error fetching past requests.");
    });
    });

    // ✅ Restrict Approving Quantity
    window.validateQuantity = function (input, maxQty) { // Making function accessible globally
    let value = parseInt(input.value);

    if (value < 1) {
    alert("Approved quantity cannot be less than 1!");
    input.value = 1;
    } else if (value > maxQty) {
    alert("Approved quantity cannot exceed the requesting quantity (" + maxQty + ")!");
    input.value = maxQty;
    }
    };

    // ✅ Handle Dropdown Change (Approve, Reject)
    $(".action-select").change(function () {
    let requestId = $(this).data("id").split("-")[0]; // Extract RequestID
    let msubCategory = $(this).data("id").split("-")[1]; // Extract MSubCategory
        //let approvingQuantity = $("input[data-id='" + requestId + "-" + msubCategory + "']").val();
        let selector = "input[data-id='" + CSS.escape(requestId + "-" + msubCategory) + "']";
        let approvingQuantity = $(selector).val();

    let actionType = $(this).val(); // Get selected action (Approve/Reject)

    console.log("Dropdown changed:", requestId, msubCategory, approvingQuantity, actionType); // Debugging

    if (actionType === "reject") {
    // Show Remarks Modal
    $("#remarksModal").data("request-id", requestId);
    $("#remarksModal").data("msub-category", msubCategory);
    //$("#remarksModal").data("approving-quantity", approvingQuantity);
    $("#remarksModal").modal("show");
    } else if (actionType === "approve") {
    // Direct Approve
    updateRequest(requestId, msubCategory, approvingQuantity, actionType, "");
    }
    });

    // ✅ Submit Remarks Modal
 

        // Example: On Reject click
        $("#submitRemarks").click(function () {
            var requestId = $("#remarksModal").data("request-id"); // fetch it correctly
            var msubCategory = $("#remarksModal").data("msub-category"); // fetch it correctly
            var remarks = $("#remarksText").val(); // or wherever HOD types remark
        updateRequest(requestId, msubCategory, null, "reject", remarks);
});

//        // Example: On Approve click
//        $("#submitApprove").click(function () {
//            var requestId = $("#remarksModal").data("request-id"); // fetch
//        var msubCategory = $("#remarksModal").data("msub-category");// fetch
//        var approvingQuantity = $("#approveQty").val();
//        updateRequest(requestId, msubCategory, approvingQuantity, "approve", null);
//});


    // ✅ Function to handle request update via AJAX
        function updateRequest(requestId, msubCategory, approvingQuantity, actionType, remarks) {
            console.log("Updating request:", requestId, msubCategory, approvingQuantity, actionType, remarks); // Debugging

            $.ajax({
                url: "/HOD/UpdateRequest",
                type: "POST",
                data: {
                    requestId: requestId,
                    msubCategory: msubCategory,
                    approvingQuantity: actionType === "approve" ? approvingQuantity : null, // ApprovingQuantity not required on reject
                    actionType: actionType,
                    remarks: actionType === "reject" ? remarks : null // Remarks not required on approve
                },
                success: function (response) {
                    console.log("Response:", response);
                    if (response.success) {
                        alert(response.message);
                        location.reload();
                    } else {
                        alert(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error("AJAX Error:", error);
                    alert("Error updating request.");
                }
            });
        }

    });
    </script>


</body>
</html>
