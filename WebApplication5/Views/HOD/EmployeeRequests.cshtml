@model WebApplication5.Models.HODViewRequestsViewModel
@{
    Layout = "~/Views/Shared/_HODLayout.cshtml";
    ViewBag.Title = "Employee Requests";
}

<style>
    button {
        padding: 3px;
        margin-top: 20px;
    }

    form {
        padding-top: 3px;
    }

    .form-label {
        font-weight: bold;
    }

    .form-control {
        width: auto;
    }

    .footer {
        margin-top: 85px;
    }
</style>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
}

<div class="mb-3">
    <button class="btn btn-info" onclick="showSection('ongoingSection')">Ongoing</button>
    <button class="btn btn-success" onclick="showSection('approvedSection')">Approved</button>
    <button class="btn btn-danger" onclick="showSection('rejectedSection')">Rejected</button>
</div>

<!-- ONGOING REQUESTS -->
<div id="ongoingSection" class="section">
    <h4>Ongoing Requests</h4>
    <form method="get" action="@Url.Action("EmployeeRequests", "HOD")">
        <div class="d-flex justify-content-center align-items-center mb-3">
            <div class="form-group me-2">
                <label for="fromDate" class="form-label">From Date:</label>
                <input type="date" id="fromDate" name="fromDate" class="form-control"
                       value="@Request.QueryString["fromDate"]" />
            </div>

            <div class="form-group me-2">
                <label for="toDate" class="form-label">To Date:</label>
                <input type="date" id="toDate" name="toDate" class="form-control"
                       value="@Request.QueryString["toDate"]" />
            </div>

            <div class="form-group mt-4">
                <button type="submit" class="btn btn-primary">Filter</button>
            </div>
        </div>
    </form>

    @if (Model.OngoingRequests.Any())
    {
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>S.No</th>
                    <th>Request ID</th>
                    <th>Requested Date</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int serialNo = 1;
                }
                @foreach (var reqGroup in Model.OngoingRequests.GroupBy(r => new { r.RequestID, r.RequestDate }))
                {
                    <tr class="request-header" data-requestid="@reqGroup.Key.RequestID">
                        <td>@serialNo</td>
                        <td>
                            <button class="btn btn-link toggle-details" data-requestid="@reqGroup.Key.RequestID">
                                @reqGroup.Key.RequestID
                            </button>
                        </td>
                        <td>@reqGroup.Key.RequestDate</td>
                    </tr>

                    <tr class="details-row" id="details-@reqGroup.Key.RequestID" style="display: none;">
                        <td colspan="3">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>Asset Type</th>
                                        <th>Material Category</th>
                                        <th>Sub-Category</th>
                                        <th>Available Quantity</th>
                                        <th>Requesting Quantity</th>
                                        <th>Pending Qty</th>
                                        <th>Approved Quantity</th>
                                        <th>Actions</th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var req in reqGroup)
                                    {

                                        <tr>

                                            <td>@req.AssetType</td>
                                            <td>@req.MaterialCategory</td>
                                            <td>@req.MSubCategory</td>
                                            <td>@req.AvailableQuantity</td>
                                            <td>@req.RequestingQuantity</td>
                                            <td>@(req.RequestingQuantity - req.ApprovedQuantity)</td>
                                            <td>
                                                <input type="number" class="form-control approvingQuantity"
                                                       data-id="@req.RequestID-@req.MSubCategory"
                                                       value="@req.ApprovedQuantity" min="0" max="@req.RequestingQuantity" />
                                            </td>
                                            <td>
                                                <button class="btn btn-info btn-sm viewPast" data-empid="@req.EmpID">Past</button>

                                                <div class="dropdown d-inline-block">

                                                    <select class="form-select action-select"
                                                            data-id="@req.RequestID-@req.MSubCategory"
                                                            data-msubcategory="@req.MSubCategory">
                                                        <option selected disabled>Actions</option>
                                                        <option value="approve">Approve</option>

                                                        <option value="reject">Reject</option>
                                                    </select>

                                                </div>

                                            </td>
                                        </tr>


                                    }
                                </tbody>
                            </table>
                        </td>
                    </tr>

                    serialNo++;
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No ongoing requests.</p>
    }

    <div class="modal fade" id="pastRequestsModal" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Past Requests</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="pastRequestsBody">
                    <!-- AJAX content -->
                </div>
            </div>
        </div>
    </div>

</div>

<!-- APPROVED REQUESTS -->
<div id="approvedSection" class="section" style="display:none;">
    <h4>Approved Requests</h4>
    <form method="get" action="@Url.Action("EmployeeRequests", "HOD")">
        <div class="d-flex justify-content-center align-items-center mb-3">
            <div class="form-group me-2">
                <label for="fromDate" class="form-label">From Date:</label>
                <input type="date" id="fromDate" name="fromDate" class="form-control"
                       value="@Request.QueryString["fromDate"]" />
            </div>

            <div class="form-group me-2">
                <label for="toDate" class="form-label">To Date:</label>
                <input type="date" id="toDate" name="toDate" class="form-control"
                       value="@Request.QueryString["toDate"]" />
            </div>

            <div class="form-group mt-4">
                <button type="submit" class="btn btn-primary">Filter</button>
            </div>
        </div>
    </form>

    @if (Model.ApprovedRequests.Any())
    {
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>S.No</th>
                    <th>Request ID</th>
                    <th>Requested Date</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int serialNo = 1;
                }
                @foreach (var reqGroup in Model.ApprovedRequests.GroupBy(r => new { r.RequestID, r.RequestDate }))
                {
                    <tr class="request-header" data-requestid="@reqGroup.Key.RequestID">
                        <td>@serialNo</td>
                        <td>
                            <button class="btn btn-link toggle-details" data-requestid="@reqGroup.Key.RequestID">
                                @reqGroup.Key.RequestID
                            </button>
                        </td>
                        <td>@reqGroup.Key.RequestDate</td>
                    </tr>

                    <tr class="details-row" id="details-@reqGroup.Key.RequestID" style="display: none;">
                        <td colspan="3">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>Asset Type</th>
                                        <th>Material Category</th>
                                        <th>Sub-Category</th>
                                        <th>Available Quantity</th>
                                        <th>Requesting Quantity</th>

                                        <th>Approved Quantity</th>


                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var req in reqGroup)
                                    {

                                        <tr>

                                            <td>@req.AssetType</td>
                                            <td>@req.MaterialCategory</td>
                                            <td>@req.MSubCategory</td>
                                            <td>@req.AvailableQuantity</td>
                                            <td>@req.RequestingQuantity</td>
                                            <td>@req.ApprovedQuantity</td>


                                        </tr>


                                    }
                                </tbody>
                            </table>
                        </td>
                    </tr>

                    serialNo++;
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No Approved requests.</p>
    }
</div>

<!-- REJECTED REQUESTS -->
<div id="rejectedSection" class="section" style="display:none;">
    <h4>Rejected Requests</h4>
    <form method="get" action="@Url.Action("EmployeeRequests", "HOD")">
        <div class="d-flex justify-content-center align-items-center mb-3">
            <div class="form-group me-2">
                <label for="fromDate" class="form-label">From Date:</label>
                <input type="date" id="fromDate" name="fromDate" class="form-control"
                       value="@Request.QueryString["fromDate"]" />
            </div>

            <div class="form-group me-2">
                <label for="toDate" class="form-label">To Date:</label>
                <input type="date" id="toDate" name="toDate" class="form-control"
                       value="@Request.QueryString["toDate"]" />
            </div>

            <div class="form-group mt-4">
                <button type="submit" class="btn btn-primary">Filter</button>
            </div>
        </div>
    </form>

    @if (Model.RejectedRequests.Any())
    {

        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>S.No</th>
                    <th>Request ID</th>
                    <th>Requested Date</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int serialNo = 1;
                }
                @foreach (var reqGroup in Model.RejectedRequests.GroupBy(r => new { r.RequestID, r.RequestDate }))
                {
                    <tr class="request-header" data-requestid="@reqGroup.Key.RequestID">
                        <td>@serialNo</td>
                        <td>
                            <button class="btn btn-link toggle-details" data-requestid="@reqGroup.Key.RequestID">
                                @reqGroup.Key.RequestID
                            </button>
                        </td>
                        <td>@reqGroup.Key.RequestDate</td>
                    </tr>

                    <tr class="details-row" id="details-@reqGroup.Key.RequestID" style="display: none;">
                        <td colspan="3">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>Asset Type</th>
                                        <th>Material Category</th>
                                        <th>Sub-Category</th>
                                        <th>Available Quantity</th>
                                        <th>Requesting Quantity</th>

                                        @*<th>Approved Quantity</th>*@
                                        <th>Remarks</th>


                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var req in reqGroup)
                                    {

                                        <tr>

                                            <td>@req.AssetType</td>
                                            <td>@req.MaterialCategory</td>
                                            <td>@req.MSubCategory</td>
                                            <td>@req.AvailableQuantity</td>
                                            <td>@req.RequestingQuantity</td>
                                            @*<td>@req.ApprovedQuantity</td>*@
                                            <td>@req.Remarks</td>

                                        </tr>


                                    }
                                </tbody>
                            </table>
                        </td>
                    </tr>

                    serialNo++;
                }
            </tbody>
        </table>
    }
    else
    {
        <p>No Approved requests.</p>
    }
</div>

<div class="modal fade" id="remarksModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Rejection Remarks</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="remarks">Enter Remarks:</label>
                    <textarea class="form-control" id="remarksText" rows="3"></textarea>
                </div>
                <button type="button" class="btn btn-danger mt-2" id="submitRemarks">Submit</button>
            </div>
        </div>
    </div>
</div>
<!-- Scripts -->
<!-- 1. jQuery -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>

<!-- 2. Popper.js (required for Bootstrap 4 dropdowns) -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.1/umd/popper.min.js"></script>

<!-- 3. Bootstrap 4 JS -->
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<!-- 4. jQuery UI (for autocomplete) -->
<link rel="stylesheet"
      href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<script>
    function showSection(sectionId) {
        $(".section").hide(); // Hide all sections
        $("#" + sectionId).show(); // Show the selected section
    }

    $(document).ready(function () {
        console.log("Document Ready!"); // Debugging

        // Expand/Collapse Request Details on Click
        $(document).on("click", ".toggle-details", function () {
            const id = $(this).data("requestid");
            console.log("Clicked ID:", id);

            const detailsRow = $("#details-" + id);
            console.log("Found rows:", detailsRow.length);

            if (!detailsRow.length) {
                console.error("Missing details row for:", id);
                return;
            }
            $(".details-row").not(detailsRow).hide();
            detailsRow.toggle();
        });



        // ✅ View Past Requests
        $(".viewPast").click(function () {
  let empId = $(this).data("empid");
  let url = '@Url.Action("GetPastRequests", "HOD")';

  $.get(url, { empId: empId }, function (html) {
    $("#pastRequestsBody").html(html);
    $("#pastRequestsModal").modal("show");
  }).fail(function () {
    alert("Error fetching past requests.");
  });
});

        // ✅ Restrict Approving Quantity
        $(".approvingQuantity").on("change", function () {
            let input = $(this);
            let newValue = parseInt(input.val());
            let maxValue = parseInt(input.attr("max"));

            //if (newValue < req.ApprovedQuantity) {
            //    alert("Approving Quantity cannot be less than previous Approved Quantity.");
            //    input.val(newValue);
            //}
            if (newValue > maxValue) {
                alert("Approving Quantity cannot exceed Requesting Quantity.");
                input.val(maxValue);
            }
        });

        // ✅ Handle Dropdown Change (Approve, Reject, Pending)
        $(".action-select").change(function () {
            let requestId = $(this).data("id").split("-")[0]; // Extract RequestID
            let msubCategory = $(this).data("id").split("-")[1]; // Extract MSubCategory
            let selector = "input[data-id='" + CSS.escape(requestId + "-" + msubCategory) + "']";
            let approvingQuantity = $(selector).val();
            let actionType = $(this).val(); // Get selected action (Approve/Reject)

            console.log("Dropdown changed:", requestId, msubCategory, approvingQuantity, actionType); // Debugging

            if (actionType === "reject") {
                // Show Remarks Modal
                $("#remarksModal").data("request-id", requestId);
                $("#remarksModal").data("msub-category", msubCategory);
                //$("#remarksModal").data("approving-quantity", approvingQuantity);
                $("#remarksModal").modal("show");
            } else if (actionType === "approve") {
                // Direct Approve
                updateRequest(requestId, msubCategory, approvingQuantity, actionType, "");
            }
        });

        // Example: On Reject click
        $("#submitRemarks").click(function () {
            var requestId = $("#remarksModal").data("request-id"); // fetch it correctly
            var msubCategory = $("#remarksModal").data("msub-category"); // fetch it correctly
            var remarks = $("#remarksText").val(); // or wherever HOD types remark
            updateRequest(requestId, msubCategory, null, "reject", remarks);
        });

        // ✅ Function to handle request update via AJAX
        function updateRequest(requestId, msubCategory, approvingQuantity, actionType, remarks) {
            console.log("Updating request:", requestId, msubCategory, approvingQuantity, actionType, remarks); // Debugging

            $.ajax({

                url: "@Url.Action("UpdateRequest", "HOD")",
                type: "POST",
                data: {
                    requestId: requestId,
                    msubCategory: msubCategory,
                    approvingQuantity: actionType === "approve" ? approvingQuantity : null, // ApprovingQuantity not required on reject
                    actionType: actionType,
                    remarks: actionType === "reject" ? remarks : null // Remarks not required on approve
                },
                success: function (response) {
                    console.log("Response:", response);
                    if (response.success) {
                        alert(response.message);
                        location.reload();
                    } else {
                        alert(response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error("AJAX Error:", error);
                    alert("Error updating request.");
                }
            });
        }

    });
</script>


