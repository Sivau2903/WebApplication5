@model List<WebApplication5.Models.CentralRequestViewModel>

@{
    Layout = "~/Views/Shared/_AuditorLayout.cshtml";
    ViewBag.Title = "MyRequests";
}

<h2>Requests Received</h2>

<form id="orderQuantityForm">
    <div class="accordion" id="requestAccordion">
        @{
            var grouped = Model.GroupBy(m => m.MaterialName);
            int index = 0;
        }

        @foreach (var group in grouped)
        {
            var groupId = $"collapse{index}";
            <div class="card mb-2 material-group" data-material="@group.Key.Trim().ToLower()">

                <div class="card-header">
                    <h5 class="mb-0 d-flex justify-content-between align-items-center">
                        <strong>📦 Material: @group.Key</strong>
                        <button class="btn btn-link text-decoration-none" type="button" data-bs-toggle="collapse" data-bs-target="#@groupId">
                            View Requests
                        </button>
                    </h5>
                </div>

                <div id="@groupId" class="collapse" data-bs-parent="#requestAccordion">
                    <div class="card-body">
                        <table class="table table-bordered">
                            <thead class="table-secondary">
                                <tr>
                                    <th>ID</th>
                                    <th>Requested Date</th>
                                    <th>University</th>
                                    <th>Order Quantity</th>
                                    <th>Certificate</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in group)
                                {
                                    <tr>
                                        <td>@item.ID</td>
                                        <td>@item.RequestedDate.ToShortDateString()</td>
                                        <td>@item.UniversityName</td>
                                        <td>
                                            <input type="number" name="OrderQuantity" class="form-control orderQty"
                                                   min="1" value="@item.OrderQuantity" data-actual="@item.OrderQuantity" />
                                        </td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(item.PurchaseDepartmentUploads))
                                            {
                                                <a href="@Url.Content(item.PurchaseDepartmentUploads)" target="_blank">View File</a>
                                            }
                                            else
                                            {
                                                <span class="text-muted">No file</span>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            index++;
        }
    </div>

    <div class="mt-3 text-end">
        <button type="button" class="btn btn-success" id="saveOrderQuantities">Save Changes</button>
    </div>
</form>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).on("click", "#saveOrderQuantities", function () {
        let payload = [];

        $("input[name='OrderQuantity']").each(function () {
            let qtyInput = $(this);
            let updatedQty = parseInt(qtyInput.val());
            let actualQty = parseInt(qtyInput.data("actual"));
            let id = parseInt(qtyInput.closest("tr").find("td:eq(0)").text().trim());

            if (updatedQty < 1 || updatedQty > actualQty) {
                alert(`Order Quantity for Request ID ${id} must be between 1 and ${actualQty}.`);
                throw new Error("Invalid Quantity");
            }

            payload.push({
                ID: id,
                OrderQuantity: updatedQty
            });
        });

        $.ajax({
            url: '/Auditor/UpdateOrderQuantities',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(payload),
            success: function () {
                alert("Order quantities updated successfully!");
                location.reload();
            },
            error: function () {
                alert("Error updating order quantities.");
            }
        });
    });
</script>
